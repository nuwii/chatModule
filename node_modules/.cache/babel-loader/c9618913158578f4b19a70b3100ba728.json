{"ast":null,"code":"var _jsxFileName = \"/Users/osiimac2/Desktop/chatModule/chatModule/src/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from \"react-redux\";\nimport { ReactReduxFirebaseProvider, firebaseReducer } from \"react-redux-firebase\";\nimport './index.css';\nimport App from \"./App\";\nimport firebase from \"./firebase\";\nimport store from \"./store/store\";\nimport { BrowserRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\nimport { useHistory } from \"react-router-dom\";\nimport Login from './components/auth/Login';\nimport SignUp from './components/auth/SignUp';\nimport 'semantic-ui-css/semantic.min.css';\nimport PrivateRoute from \"./components/auth/PrivateRoute.jsx\"; // react-redux-firebase config\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst rrfConfig = {\n  userProfile: 'users' // useFirestoreForProfile: true // Firestore for Profile instead of Realtime DB\n\n};\nconst rrfProps = {\n  firebase,\n  config: rrfConfig,\n  dispatch: store.dispatch // createFirestoreInstance // <- needed if using firestore\n\n};\n\nconst Root = () => {\n  _s();\n\n  const history = useHistory(); //sadece ilk girişde çaışıyor firebase auth kontrol yapılıp login veya home\n\n  useEffect(() => {\n    //çıkış yap butonu\n    firebase.auth().onAuthStateChanged(user => {\n      if (user) {\n        //login olmuş\n        history.push('/');\n      } else {\n        //login olmamış\n        history.push('/login');\n      }\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Switch, {\n    children: [/*#__PURE__*/_jsxDEV(PrivateRoute, {\n      exact: true,\n      path: \"/\",\n      children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: \"/login\",\n      component: Login\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: \"/signup\",\n      component: SignUp\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Root, \"bz2N+u0mX89LO9zOCfVCA9Sa20M=\", false, function () {\n  return [useHistory];\n});\n\n_c = Root;\nReactDOM.render( /*#__PURE__*/_jsxDEV(Provider, {\n  store: store,\n  children: /*#__PURE__*/_jsxDEV(ReactReduxFirebaseProvider, { ...rrfProps,\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(Root, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 3\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 3\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 78,\n  columnNumber: 3\n}, this), document.getElementById('root'));\n\nvar _c;\n\n$RefreshReg$(_c, \"Root\");","map":{"version":3,"sources":["/Users/osiimac2/Desktop/chatModule/chatModule/src/index.js"],"names":["React","useEffect","ReactDOM","Provider","ReactReduxFirebaseProvider","firebaseReducer","App","firebase","store","BrowserRouter","Router","Route","Switch","Redirect","useHistory","Login","SignUp","PrivateRoute","rrfConfig","userProfile","rrfProps","config","dispatch","Root","history","auth","onAuthStateChanged","user","push","render","document","getElementById"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SACEC,0BADF,EAEEC,eAFF,QAGO,sBAHP;AAIA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,SACEC,aAAa,IAAIC,MADnB,EAEEC,KAFF,EAGEC,MAHF,EAIEC,QAJF,QAKO,kBALP;AAMA,SAAQC,UAAR,QAAyB,kBAAzB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAO,kCAAP;AACA,OAAOC,YAAP,MAAyB,oCAAzB,C,CAGA;;;AACA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,WAAW,EAAE,OADG,CAEhB;;AAFgB,CAAlB;AAOA,MAAMC,QAAQ,GAAG;AACfb,EAAAA,QADe;AAEfc,EAAAA,MAAM,EAAEH,SAFO;AAGfI,EAAAA,QAAQ,EAAEd,KAAK,CAACc,QAHD,CAIf;;AAJe,CAAjB;;AAQA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AAEjB,QAAMC,OAAO,GAAGV,UAAU,EAA1B,CAFiB,CAGjB;;AACAb,EAAAA,SAAS,CAAC,MAAM;AACd;AACAM,IAAAA,QAAQ,CAACkB,IAAT,GAAgBC,kBAAhB,CAAoCC,IAAD,IAAS;AAE1C,UAAGA,IAAH,EAAQ;AACN;AACAH,QAAAA,OAAO,CAACI,IAAR,CAAc,GAAd;AACD,OAHD,MAGM;AACJ;AACAJ,QAAAA,OAAO,CAACI,IAAR,CAAa,QAAb;AACD;AACF,KATD;AAUD,GAZQ,EAYN,EAZM,CAAT;AAeA,sBACE,QAAC,MAAD;AAAA,4BACE,QAAC,YAAD;AAAc,MAAA,KAAK,MAAnB;AAAoB,MAAA,IAAI,EAAC,GAAzB;AAAA,6BACE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAKE,QAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,QAAlB;AAA2B,MAAA,SAAS,EAAEb;AAAtC;AAAA;AAAA;AAAA;AAAA,YALF,eAME,QAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,SAAlB;AAA4B,MAAA,SAAS,EAAEC;AAAvC;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CA9BD;;GAAMO,I;UAEYT,U;;;KAFZS,I;AAmCNrB,QAAQ,CAAC2B,MAAT,eAEE,QAAC,QAAD;AAAU,EAAA,KAAK,EAAErB,KAAjB;AAAA,yBACA,QAAC,0BAAD,OAAgCY,QAAhC;AAAA,2BACA,QAAC,MAAD;AAAA,6BACE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,QAFF,EAUEU,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAVF","sourcesContent":["import React, {useEffect} from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from \"react-redux\";\nimport {\n  ReactReduxFirebaseProvider,\n  firebaseReducer\n} from \"react-redux-firebase\";\nimport './index.css';\nimport App from \"./App\";\nimport firebase from \"./firebase\";\nimport store from \"./store/store\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect,\n} from \"react-router-dom\";\nimport {useHistory} from \"react-router-dom\";\nimport Login from './components/auth/Login';\nimport SignUp from './components/auth/SignUp';\nimport 'semantic-ui-css/semantic.min.css';\nimport PrivateRoute from \"./components/auth/PrivateRoute.jsx\";\n\n\n// react-redux-firebase config\nconst rrfConfig = {\n  userProfile: 'users'\n  // useFirestoreForProfile: true // Firestore for Profile instead of Realtime DB\n}\n\n\n\nconst rrfProps = {\n  firebase,\n  config: rrfConfig,\n  dispatch: store.dispatch\n  // createFirestoreInstance // <- needed if using firestore\n}\n\n\nconst Root = () => {\n\n  const history = useHistory();\n  //sadece ilk girişde çaışıyor firebase auth kontrol yapılıp login veya home\n  useEffect(() => {\n    //çıkış yap butonu\n    firebase.auth().onAuthStateChanged((user) =>{\n  \n      if(user){\n        //login olmuş\n        history.push ('/')\n      }else {\n        //login olmamış\n        history.push('/login')\n      }\n    })\n  }, [])\n\n\n  return(\n    <Switch>\n      <PrivateRoute exact path=\"/\">\n        <App/>    \n      </PrivateRoute>\n\n      <Route exact path=\"/login\" component={Login}/>\n      <Route exact path=\"/signup\" component={SignUp}/>\n    </Switch>\n\n  );\n};\n\n\n  \n\nReactDOM.render(\n    \n  <Provider store={store}>\n  <ReactReduxFirebaseProvider {...rrfProps}>\n  <Router>\n    <Root/>\n   </Router>\n  </ReactReduxFirebaseProvider>\n</Provider>\n ,\n  document.getElementById('root')\n);"]},"metadata":{},"sourceType":"module"}