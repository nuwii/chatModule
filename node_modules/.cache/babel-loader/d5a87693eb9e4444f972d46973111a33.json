{"ast":null,"code":"var _jsxFileName = \"/Users/osiimac2/Desktop/chatModule/chatModule/src/components/ChatPanel/ChatPanel.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport { Segment, Header, Icon, Comment, Form, Input, Button, TextArea } from \"semantic-ui-react\";\nimport { useFirebase } from \"react-redux-firebase\";\nimport { useSelector } from \"react-redux\";\nimport { useFirebaseConnect, isLoaded, isEmpty } from \"react-redux-firebase\";\nimport Message from \"./Message\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst {\n  uuid\n} = require(\"uuidv4\");\n\nconst ChatPanel = ({\n  currentChannel\n}) => {\n  _s();\n\n  useFirebaseConnect([{\n    path: `/messages/${currentChannel.key}`,\n    storeAs: \"channelMessages\"\n  }]);\n  const firebase = useFirebase();\n  const profile = useSelector(state => state.firebase.profile);\n  const currentUserUid = useSelector(state => state.firebase.auth.uid);\n  const channelMessages = useSelector(state => state.firebase.ordered.channelMessages);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const fileInputRef = useRef(null);\n  const messagesEndRef = useRef(null);\n  useEffect(() => {\n    messagesEndRef.current.scrollIntoView({\n      behavior: \"smooth\",\n      block: \"end\"\n    });\n  });\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (content !== \"\") {\n      const message = {\n        content,\n        timestamp: firebase.database.ServerValue.TIMESTAMP,\n        user: {\n          id: currentUserUid,\n          name: profile.name,\n          avatar: profile.avatar\n        }\n      };\n      firebase.push(`messages/${currentChannel.key}`, message).then(() => {\n        setContent(\"\");\n      });\n    }\n  };\n\n  const uploadMedia = event => {\n    const file = event.target.files[0];\n\n    if (file) {\n      const storageRef = firebase.storage().ref();\n      const fileRef = storageRef.child(`chat/public/${uuid()}.jpg`);\n      return fileRef.put(file).then(snap => {\n        fileRef.getDownloadURL().then(downloadURL => {\n          sendMediaMessage(downloadURL);\n        });\n      }).catch(err => {\n        console.error(\"error uploading file\", err);\n      });\n    }\n  };\n\n  const sendMediaMessage = url => {\n    const message = {\n      image: url,\n      timestamp: firebase.database.ServerValue.TIMESTAMP,\n      user: {\n        id: currentUserUid,\n        name: profile.name,\n        avatar: profile.avatar\n      }\n    };\n    firebase.push(`messages/${currentChannel.key}`, message).then(() => {\n      console.log(\"media message sent\");\n    });\n  };\n\n  const filterMessages = () => {\n    const regex = new RegExp(searchTerm, \"gi\");\n    const searchResults = [...channelMessages].reduce((acc, message) => {\n      if (message.value.content && message.value.content.match(regex) || message.value.user && message.value.user.name.match(regex)) {\n        acc.push(message);\n      }\n\n      return acc;\n    }, []);\n    return searchResults;\n  };\n\n  const renderedMessages = searchTerm !== \"\" ? filterMessages() : channelMessages;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Segment, {\n      clearing: true,\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        as: \"h3\",\n        floated: \"left\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [/*#__PURE__*/_jsxDEV(Icon, {\n            name: \"hashtag\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 25\n          }, this), currentChannel.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Header, {\n        as: \"h3\",\n        floated: \"right\",\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          size: \"mini\",\n          icon: \"search\",\n          name: \"searchTerm\",\n          placeholder: \"Mesajlarda ara..\",\n          value: searchTerm,\n          onChange: event => setSearchTerm(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Segment, {\n      style: {\n        position: \"fixed\",\n        top: 55,\n        bottom: 70,\n        width: \"81%\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Comment.Group, {\n        style: {\n          height: \"80vh\",\n          overflowY: \"auto\",\n          maxWidth: \"100%\"\n        },\n        children: [renderedMessages && renderedMessages.map(({\n          key,\n          value\n        }) => /*#__PURE__*/_jsxDEV(Message, {\n          message: value\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 29\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Segment, {\n      style: {\n        position: \"fixed\",\n        bottom: 0,\n        width: \"85%\",\n        display: \"flex\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        icon: true,\n        onClick: () => fileInputRef.current.click(),\n        children: [/*#__PURE__*/_jsxDEV(Icon, {\n          name: \"add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          name: \"file\",\n          ref: fileInputRef,\n          onChange: uploadMedia\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleSubmit,\n        style: {\n          flex: \"1\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          fluid: true,\n          name: \"message\",\n          value: content,\n          \"word-break\": true,\n          onChange: event => setContent(event.target.value),\n          labelPosition: \"left\",\n          placeholder: `# ${currentChannel.name} kanalına mesaj gönder`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ChatPanel, \"K7yzs1A0xpsnyEHA6XuKeHmHvTk=\", false, function () {\n  return [useFirebaseConnect, useFirebase, useSelector, useSelector, useSelector];\n});\n\n_c = ChatPanel;\nexport default ChatPanel;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatPanel\");","map":{"version":3,"sources":["/Users/osiimac2/Desktop/chatModule/chatModule/src/components/ChatPanel/ChatPanel.jsx"],"names":["React","useState","useRef","useEffect","Segment","Header","Icon","Comment","Form","Input","Button","TextArea","useFirebase","useSelector","useFirebaseConnect","isLoaded","isEmpty","Message","uuid","require","ChatPanel","currentChannel","path","key","storeAs","firebase","profile","state","currentUserUid","auth","uid","channelMessages","ordered","searchTerm","setSearchTerm","content","setContent","fileInputRef","messagesEndRef","current","scrollIntoView","behavior","block","handleSubmit","event","preventDefault","message","timestamp","database","ServerValue","TIMESTAMP","user","id","name","avatar","push","then","uploadMedia","file","target","files","storageRef","storage","ref","fileRef","child","put","snap","getDownloadURL","downloadURL","sendMediaMessage","catch","err","console","error","url","image","log","filterMessages","regex","RegExp","searchResults","reduce","acc","value","match","renderedMessages","position","top","bottom","width","height","overflowY","maxWidth","map","display","click","flex"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,SAAlC,QAAmD,OAAnD;AACA,SAASC,OAAT,EAAkBC,MAAlB,EAA0BC,IAA1B,EAAgCC,OAAhC,EAAyCC,IAAzC,EAA+CC,KAA/C,EAAsDC,MAAtD,EAA8DC,QAA9D,QAA8E,mBAA9E;AACA,SAASC,WAAT,QAA4B,sBAA5B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAAQC,kBAAR,EAA4BC,QAA5B,EAAsCC,OAAtC,QAAoD,sBAApD;AACA,OAAOC,OAAP,MAAoB,WAApB;;;;AAGA,MAAM;AAAEC,EAAAA;AAAF,IAAWC,OAAO,CAAC,QAAD,CAAxB;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAwB;AAAA;;AACtCP,EAAAA,kBAAkB,CAAC,CACf;AACIQ,IAAAA,IAAI,EAAG,aAAYD,cAAc,CAACE,GAAI,EAD1C;AAEIC,IAAAA,OAAO,EAAC;AAFZ,GADe,CAAD,CAAlB;AAMA,QAAMC,QAAQ,GAAGb,WAAW,EAA5B;AACA,QAAMc,OAAO,GAAGb,WAAW,CAACc,KAAK,IAAIA,KAAK,CAACF,QAAN,CAAeC,OAAzB,CAA3B;AACA,QAAME,cAAc,GAAGf,WAAW,CAAGc,KAAD,IAAWA,KAAK,CAACF,QAAN,CAAeI,IAAf,CAAoBC,GAAjC,CAAlC;AACA,QAAMC,eAAe,GAAGlB,WAAW,CAAEc,KAAD,IAAWA,KAAK,CAACF,QAAN,CAAeO,OAAf,CAAuBD,eAAnC,CAAnC;AAEA,QAAM,CAACE,UAAD,EAAaC,aAAb,IAA8BjC,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACkC,OAAD,EAAUC,UAAV,IAAwBnC,QAAQ,CAAC,EAAD,CAAtC;AAEA,QAAMoC,YAAY,GAAGnC,MAAM,CAAC,IAAD,CAA3B;AACA,QAAMoC,cAAc,GAAEpC,MAAM,CAAC,IAAD,CAA5B;AAGAC,EAAAA,SAAS,CAAC,MAAM;AACZmC,IAAAA,cAAc,CAACC,OAAf,CAAuBC,cAAvB,CAAsC;AAClCC,MAAAA,QAAQ,EAAE,QADwB;AAExCC,MAAAA,KAAK,EAAE;AAFiC,KAAtC;AAIH,GALQ,CAAT;;AAOA,QAAMC,YAAY,GAAIC,KAAD,IAAW;AAC5BA,IAAAA,KAAK,CAACC,cAAN;;AAEA,QAAGV,OAAO,KAAI,EAAd,EAAiB;AACb,YAAMW,OAAO,GAAE;AACXX,QAAAA,OADW;AAEXY,QAAAA,SAAS,EAAEtB,QAAQ,CAACuB,QAAT,CAAkBC,WAAlB,CAA8BC,SAF9B;AAGXC,QAAAA,IAAI,EAAC;AACDC,UAAAA,EAAE,EAACxB,cADF;AAEDyB,UAAAA,IAAI,EAAE3B,OAAO,CAAC2B,IAFb;AAGDC,UAAAA,MAAM,EAAE5B,OAAO,CAAC4B;AAHf;AAHM,OAAf;AASA7B,MAAAA,QAAQ,CAAC8B,IAAT,CAAe,YAAWlC,cAAc,CAACE,GAAI,EAA7C,EAAgDuB,OAAhD,EAAyDU,IAAzD,CAA8D,MAAM;AAChEpB,QAAAA,UAAU,CAAC,EAAD,CAAV;AACH,OAFD;AAGH;AACJ,GAjBD;;AAmBA,QAAMqB,WAAW,GAAIb,KAAD,IAAW;AAC3B,UAAMc,IAAI,GAAGd,KAAK,CAACe,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAAb;;AAEA,QAAGF,IAAH,EAAS;AACL,YAAMG,UAAU,GAAEpC,QAAQ,CAACqC,OAAT,GAAmBC,GAAnB,EAAlB;AACA,YAAMC,OAAO,GAAGH,UAAU,CAACI,KAAX,CAAkB,eAAc/C,IAAI,EAAG,MAAvC,CAAhB;AAEA,aAAO8C,OAAO,CACbE,GADM,CACFR,IADE,EAENF,IAFM,CAEAW,IAAD,IAAU;AACZH,QAAAA,OAAO,CAACI,cAAR,GAAyBZ,IAAzB,CAA+Ba,WAAD,IAAiB;AAC3CC,UAAAA,gBAAgB,CAACD,WAAD,CAAhB;AACH,SAFD;AAGH,OANM,EAONE,KAPM,CAOCC,GAAD,IAAS;AACZC,QAAAA,OAAO,CAACC,KAAR,CAAc,sBAAd,EAAsCF,GAAtC;AACH,OATM,CAAP;AAUH;AAEJ,GAnBD;;AAsBA,QAAMF,gBAAgB,GAAGK,GAAG,IAAI;AAC5B,UAAM7B,OAAO,GAAG;AACZ8B,MAAAA,KAAK,EAAED,GADK;AAEZ5B,MAAAA,SAAS,EAAEtB,QAAQ,CAACuB,QAAT,CAAkBC,WAAlB,CAA8BC,SAF7B;AAGZC,MAAAA,IAAI,EAAE;AACFC,QAAAA,EAAE,EAACxB,cADD;AAEFyB,QAAAA,IAAI,EAAE3B,OAAO,CAAC2B,IAFZ;AAGFC,QAAAA,MAAM,EAAC5B,OAAO,CAAC4B;AAHb;AAHM,KAAhB;AASA7B,IAAAA,QAAQ,CAAC8B,IAAT,CAAe,YAAWlC,cAAc,CAACE,GAAI,EAA7C,EAAgDuB,OAAhD,EAAyDU,IAAzD,CAA8D,MAAM;AAChEiB,MAAAA,OAAO,CAACI,GAAR,CAAY,oBAAZ;AACH,KAFD;AAGH,GAbD;;AAkBA,QAAMC,cAAc,GAAG,MAAM;AACzB,UAAMC,KAAK,GAAG,IAAIC,MAAJ,CAAW/C,UAAX,EAAuB,IAAvB,CAAd;AAEA,UAAMgD,aAAa,GAAG,CAAC,GAAGlD,eAAJ,EAAqBmD,MAArB,CAA4B,CAACC,GAAD,EAAKrC,OAAL,KAAe;AAC7D,UAAGA,OAAO,CAACsC,KAAR,CAAcjD,OAAd,IAAyBW,OAAO,CAACsC,KAAR,CAAcjD,OAAd,CAAsBkD,KAAtB,CAA4BN,KAA5B,CAAzB,IACFjC,OAAO,CAACsC,KAAR,CAAcjC,IAAd,IAAsBL,OAAO,CAACsC,KAAR,CAAcjC,IAAd,CAAmBE,IAAnB,CAAwBgC,KAAxB,CAA8BN,KAA9B,CADvB,EAEC;AACGI,QAAAA,GAAG,CAAC5B,IAAJ,CAAST,OAAT;AACH;;AACD,aAAOqC,GAAP;AACH,KAPqB,EAOnB,EAPmB,CAAtB;AAQA,WAAOF,aAAP;AACH,GAZD;;AAcA,QAAMK,gBAAgB,GACtBrD,UAAU,KAAK,EAAf,GAAoB6C,cAAc,EAAlC,GAAuC/C,eADvC;AAGA,sBACI;AAAA,4BAGI,QAAC,OAAD;AAAS,MAAA,QAAQ,MAAjB;AAAA,8BACI,QAAC,MAAD;AAAQ,QAAA,EAAE,EAAC,IAAX;AAAgB,QAAA,OAAO,EAAC,MAAxB;AAAA,+BACI;AAAA,kCACI,QAAC,IAAD;AAAM,YAAA,IAAI,EAAC;AAAX;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEKV,cAAc,CAACgC,IAFpB;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAQI,QAAC,MAAD;AAAQ,QAAA,EAAE,EAAC,IAAX;AAAgB,QAAA,OAAO,EAAC,OAAxB;AAAA,+BACI,QAAC,KAAD;AACI,UAAA,IAAI,EAAC,MADT;AAEI,UAAA,IAAI,EAAC,QAFT;AAGI,UAAA,IAAI,EAAC,YAHT;AAII,UAAA,WAAW,EAAC,kBAJhB;AAKI,UAAA,KAAK,EAAEpB,UALX;AAMI,UAAA,QAAQ,EAAEW,KAAK,IAAIV,aAAa,CAACU,KAAK,CAACe,MAAN,CAAayB,KAAd;AANpC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,eAyBI,QAAC,OAAD;AAAS,MAAA,KAAK,EAAE;AAACG,QAAAA,QAAQ,EAAC,OAAV;AAAmBC,QAAAA,GAAG,EAAC,EAAvB;AAA2BC,QAAAA,MAAM,EAAC,EAAlC;AAAsCC,QAAAA,KAAK,EAAC;AAA5C,OAAhB;AAAA,6BACI,QAAC,OAAD,CAAS,KAAT;AACI,QAAA,KAAK,EAAE;AACHC,UAAAA,MAAM,EAAC,MADJ;AAEHC,UAAAA,SAAS,EAAC,MAFP;AAGHC,UAAAA,QAAQ,EAAC;AAHN,SADX;AAAA,mBAOSP,gBAAgB,IAAIA,gBAAgB,CAACQ,GAAjB,CAAqB,CAAC;AAACvE,UAAAA,GAAD;AAAM6D,UAAAA;AAAN,SAAD,kBACtC,QAAC,OAAD;AAAmB,UAAA,OAAO,EAAEA;AAA5B,WAAc7D,GAAd;AAAA;AAAA;AAAA;AAAA,gBADiB,CAP7B,eAaQ;AAAK,UAAA,GAAG,EAAEe;AAAV;AAAA;AAAA;AAAA;AAAA,gBAbR;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAzBJ,eA6CI,QAAC,OAAD;AACI,MAAA,KAAK,EAAE;AACHiD,QAAAA,QAAQ,EAAC,OADN;AAEHE,QAAAA,MAAM,EAAC,CAFJ;AAGHC,QAAAA,KAAK,EAAC,KAHH;AAIHK,QAAAA,OAAO,EAAC;AAJL,OADX;AAAA,8BAQQ,QAAC,MAAD;AAAQ,QAAA,IAAI,MAAZ;AAAa,QAAA,OAAO,EAAE,MAAM1D,YAAY,CAACE,OAAb,CAAqByD,KAArB,EAA5B;AAAA,gCACI,QAAC,IAAD;AAAM,UAAA,IAAI,EAAC;AAAX;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,IAAI,EAAC,MAAxB;AAA+B,UAAA,GAAG,EAAE3D,YAApC;AAAkD,UAAA,QAAQ,EAAEoB;AAA5D;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cARR,eAYQ,QAAC,IAAD;AAAM,QAAA,QAAQ,EAAEd,YAAhB;AAA8B,QAAA,KAAK,EAAE;AAACsD,UAAAA,IAAI,EAAC;AAAN,SAArC;AAAA,+BACI,QAAC,KAAD;AACA,UAAA,KAAK,MADL;AAEA,UAAA,IAAI,EAAC,SAFL;AAGA,UAAA,KAAK,EAAE9D,OAHP;AAIA,4BAJA;AAKA,UAAA,QAAQ,EAAES,KAAK,IAAER,UAAU,CAACQ,KAAK,CAACe,MAAN,CAAayB,KAAd,CAL3B;AAMA,UAAA,aAAa,EAAC,MANd;AAOA,UAAA,WAAW,EAAG,KAAI/D,cAAc,CAACgC,IAAK;AAPtC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAZR;AAAA;AAAA;AAAA;AAAA;AAAA,YA7CJ;AAAA,kBADJ;AA0EH,CAhLD;;GAAMjC,S;UACFN,kB,EAMiBF,W,EACDC,W,EACOA,W,EACCA,W;;;KAVtBO,S;AAkLN,eAAeA,SAAf","sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport { Segment, Header, Icon, Comment, Form, Input, Button, TextArea } from \"semantic-ui-react\";\r\nimport { useFirebase } from \"react-redux-firebase\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {useFirebaseConnect, isLoaded, isEmpty} from \"react-redux-firebase\";\r\nimport Message from \"./Message\";\r\n\r\n\r\nconst { uuid } = require(\"uuidv4\");\r\n\r\nconst ChatPanel = ({ currentChannel }) => {\r\n    useFirebaseConnect([\r\n        {\r\n            path: `/messages/${currentChannel.key}`,\r\n            storeAs:\"channelMessages\"\r\n        }\r\n    ]);\r\n    const firebase = useFirebase();\r\n    const profile = useSelector(state => state.firebase.profile);\r\n    const currentUserUid = useSelector ((state) => state.firebase.auth.uid);\r\n    const channelMessages = useSelector((state) => state.firebase.ordered.channelMessages);\r\n\r\n    const [searchTerm, setSearchTerm] = useState(\"\");\r\n    const [content, setContent] = useState(\"\");\r\n\r\n    const fileInputRef = useRef(null);\r\n    const messagesEndRef =useRef(null);\r\n\r\n\r\n    useEffect(() => {\r\n        messagesEndRef.current.scrollIntoView({\r\n            behavior: \"smooth\",\r\n      block: \"end\",\r\n        });\r\n    });\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        if(content !==\"\"){\r\n            const message ={\r\n                content,\r\n                timestamp: firebase.database.ServerValue.TIMESTAMP,\r\n                user:{\r\n                    id:currentUserUid,\r\n                    name: profile.name,\r\n                    avatar: profile.avatar,\r\n                },\r\n            };\r\n            firebase.push(`messages/${currentChannel.key}`, message).then(() => {\r\n                setContent(\"\");\r\n            });\r\n        }\r\n    };\r\n\r\n    const uploadMedia = (event) => {\r\n        const file = event.target.files[0];\r\n\r\n        if(file) {\r\n            const storageRef =firebase.storage().ref();\r\n            const fileRef = storageRef.child(`chat/public/${uuid()}.jpg`);\r\n\r\n            return fileRef\r\n            .put(file)\r\n            .then((snap) => {\r\n                fileRef.getDownloadURL().then((downloadURL) => {\r\n                    sendMediaMessage(downloadURL);\r\n                });\r\n            })\r\n            .catch((err) => {\r\n                console.error(\"error uploading file\", err)\r\n            })\r\n        }\r\n\r\n    };\r\n\r\n\r\n    const sendMediaMessage = url => {\r\n        const message = {\r\n            image: url,\r\n            timestamp: firebase.database.ServerValue.TIMESTAMP,\r\n            user: {\r\n                id:currentUserUid,\r\n                name: profile.name,\r\n                avatar:profile.avatar,\r\n            },\r\n        };\r\n        firebase.push(`messages/${currentChannel.key}`, message).then(() => {\r\n            console.log(\"media message sent\");\r\n        });\r\n    };\r\n\r\n\r\n    \r\n\r\n    const filterMessages = () => {\r\n        const regex = new RegExp(searchTerm, \"gi\");\r\n\r\n        const searchResults = [...channelMessages].reduce((acc,message)=>{\r\n            if(message.value.content && message.value.content.match(regex) || \r\n            (message.value.user && message.value.user.name.match(regex))\r\n            ){\r\n                acc.push(message);\r\n            }\r\n            return acc;\r\n        }, []);\r\n        return searchResults;\r\n    };\r\n\r\n    const renderedMessages = \r\n    searchTerm !== \"\" ? filterMessages() : channelMessages; \r\n\r\n    return (\r\n        <>\r\n      \r\n            {/* Message Header */}\r\n            <Segment clearing>\r\n                <Header as=\"h3\" floated=\"left\">\r\n                    <span>\r\n                        <Icon name=\"hashtag\" />\r\n                        {currentChannel.name}\r\n                    </span>\r\n                </Header>\r\n                {/* Search Message */}\r\n                <Header as=\"h3\" floated=\"right\">\r\n                    <Input\r\n                        size=\"mini\"\r\n                        icon=\"search\"\r\n                        name=\"searchTerm\"\r\n                        placeholder=\"Mesajlarda ara..\"\r\n                        value={searchTerm}\r\n                        onChange={event => setSearchTerm(event.target.value)}\r\n                    />\r\n                </Header>\r\n            </Segment>\r\n\r\n            {/* Messages */}\r\n\r\n            <Segment style={{position:\"fixed\", top:55, bottom:70, width:\"81%\"}}>\r\n                <Comment.Group\r\n                    style={{\r\n                        height:\"80vh\",\r\n                        overflowY:\"auto\",\r\n                        maxWidth:\"100%\",\r\n                    }}                    \r\n                    >\r\n                        {renderedMessages && renderedMessages.map(({key, value}) => (\r\n                            <Message key={key} message={value}/>\r\n                            \r\n                        ))}\r\n\r\n\r\n                        <div ref={messagesEndRef}/>\r\n\r\n                    </Comment.Group>\r\n            </Segment>\r\n\r\n            {/* Send New Message */}\r\n            <Segment\r\n                style={{\r\n                    position:\"fixed\",\r\n                    bottom:0,\r\n                    width:\"85%\",\r\n                    display:\"flex\",\r\n                }}\r\n                >\r\n                    <Button icon onClick={() => fileInputRef.current.click()}>\r\n                        <Icon name=\"add\"/>\r\n                        <input type=\"file\" name=\"file\" ref={fileInputRef} onChange={uploadMedia} />\r\n                    </Button>\r\n                    <Form onSubmit={handleSubmit} style={{flex:\"1\"}}>\r\n                        <Input \r\n                        fluid \r\n                        name=\"message\" \r\n                        value={content} \r\n                        word-break\r\n                        onChange={event=>setContent(event.target.value)}\r\n                        labelPosition=\"left\" \r\n                        placeholder={`# ${currentChannel.name} kanalına mesaj gönder`}\r\n                        />\r\n                    </Form>\r\n                   \r\n                </Segment>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ChatPanel\r\n\r\n"]},"metadata":{},"sourceType":"module"}